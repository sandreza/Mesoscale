var documenterSearchIndex = {"docs":
[{"location":"channels_home/#sec:eom","page":"Home","title":"Equations of Motions","text":"","category":"section"},{"location":"channels_home/","page":"Home","title":"Home","text":"The equations of motion are the boussinesq equations with a linear equation of state,","category":"page"},{"location":"channels_home/","page":"Home","title":"Home","text":"beginaligned\npartial_t bmu + nabla cdot ( bmu otimes bmu ) + bmf times bmu = nu^h Delta^h bmu + nu^v partial_z bmu - frac1rho_0nabla p+ b hatz   \nnabla cdot bmu = 0 \npartial_t b + nabla cdot (bmu b) = kappa^h Delta^h b + kappa^v partial_z b + mathcalS^b\nendaligned","category":"page"},{"location":"channels_home/","page":"Home","title":"Home","text":"where we use an anistropic diffusivity and viscocity tensor, and mathcalS^b is a buoyancy source term that will either be zero or a relaxation to a fixed temperature profile on the norther wall.","category":"page"},{"location":"simulation_1/#Mesoscale-Channel-Setup","page":"Simulation 1","title":"Mesoscale Channel Setup","text":"","category":"section"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The equations of motion are here. The Oceananigans script is the hybrid.jl setup here.","category":"page"},{"location":"simulation_1/#Boundary-Conditions-/-Source-Terms","page":"Simulation 1","title":"Boundary Conditions / Source Terms","text":"","category":"section"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Buoyancy : Linear relaxation to the surface, insulating boundary conditions elsewhere. A sponge layer relaxation to the northern wall.\nMomentum : Linear drag for the horizontal velocities, gaussian wind-stress for the zonal velocity at the surface, stress-free boundary conditions for the meridional velocity, no penetration for the wall normal velocities.","category":"page"},{"location":"simulation_1/#Table-of-model-parameters-and-functional-form","page":"Simulation 1","title":"Table of model parameters and functional form","text":"","category":"section"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The default viscocity and diffusivity values for the simulation are","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\nkappa^h 05 times 10^-5 fractextm^2texts horizontal diffusivity\nkappa^v 05 times 10^-5 fractextm^2texts vertical diffusivity\nnu^h 12 fractextm^2texts horizontal viscocity\nnu^v 3 times 10^-4 fractextm^2texts vertical viscocity","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The physical parameter values are","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\nrho^0 1024 fractextkgtextm^3 reference density\nalpha 2 times 10^-4 frac1textK thermal expansion coefficient\ng 98061 fractextmtexts^2 gravitational acceleration","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The domain is 0 L_x) times 0 L_y times -L_z 0, (periodic, wall-bounded, wall-bounded) with values","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\nL_x 10^3 textkm Zonal Length\nL_y 10^3 textkm Meriodional Length\nL_z 3 textkm Depth","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"We use a beta-plane coriolis ","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"bmf = (f + beta y)hatz","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"with f and beta values","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\nf -10^-4 frac1texts constant term\nbeta 10^-11 frac1textm frac1text s linear term","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The sponge layer for buoyancy at northern wall is of the form","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"mathcalS^b(byz) = - frac1lambda^tleft b - Delta b  fracexp left( zh right) - exp left( -L_zh right)exp left( 0 right) - exp left( -L_zh right) right exp left( fracy - L_ylambda^N right)","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"and the surface relaxation for buoyancy is","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"left Phi^*_b right_textsurface = lambda^s left(b - Delta b fracyL_y right)","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"with parameter values","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\nlambda^s 10^-4 fracmtexts surface buoyancy velocity constant\nDelta b 10 times alpha times 10 fractextmtext s^2 buoyancy jump\nh 1 textkm northern wall stratification e-folding length\nlambda^t 28 times 86400 texts relaxation time\nlambda^N 20 textkm northern wall horizontal e-folding length","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The surface flux for the zonal velocity, (u where bmu = (uvw)) is","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"left Phi^*_u right_textsurface = -fractaurho_0 left exp left( - lambda^u frac(y-L_y2)^2L_y^2 right) - exp left( - lambda^u frac(L_y2)^2L_y^2 right) right","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"with parameters","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\ntau 02 fracNtextm^2 wind-stress magnitude\nlambda^u 32 dimensionless decay constant","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The linear drag was chosen to be","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\nmu 10^-3 fracmtexts linear drag velocity parameter","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"And finally the numerical parameters were","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Parameter Value Units Description\nDelta t 300 texts time-step size\nN_x 192 dimensionless zonal grid points\nN_y 192 dimensionless meridional grid points\nN_z 32 dimensionless vertical levels","category":"page"},{"location":"simulation_1/#Comments-on-Parameter-Choices","page":"Simulation 1","title":"Comments on Parameter Choices","text":"","category":"section"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Delta b is the buoyancy jump from the bottom of the domain and the top of the domain. It is chosen so that the buoyancy should remain between 0 and Delta b. The relaxation on the surface is chosen so that the minimum on the surface matches with the minimum on the bottom, and similarly for the maximum. Since the smallest temperature on the surface occurs in the south, this induces isopycnals from the southern surface to the northern bottom.\nThe parameters lambda^N and lambda^u were chosen so that there was little overlap in momentum windstress and buoyancy sponge relaxation \nThe simulation was insensitive to kappa^h, suggesting that there is a substantial amount of horizontal numerical diffusion","category":"page"},{"location":"simulation_1/#Initial-Condition","page":"Simulation 1","title":"Initial Condition","text":"","category":"section"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Firstly consider an initial condition for buoyancy of the form","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\nb(x y z t= 0 ) = b_s(y) + b_n(z) - b_n(0)\nendaligned ","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"with b_s(L_y) = b_n(0) where b_s(y) is the surface relaxation profile and b_n(z) is the northern wall relaxation. Observe that this choice of initial condition implies","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\nb(x y = L_y z t= 0 ) = b^n(z)  \nb(x y  z = 0 t= 0 ) = b^s(y)  \nendaligned ","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"In the context of the simulation above this means ","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\nb(x y z t= 0 ) =  underbraceDelta bfracyL_y_textsurface relaxation + underbraceDelta b fracexp(zh)- exp(-L_z  h)1- exp(-L_z  h)_textnorthern wall relaxation - underbraceDelta b_b_s(L_y) = b_n(0) \nendaligned ","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"From the initial condition for buoyancy we will derive the initial condition for velocity assuming Geostrophic Balance,","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\n- (f+beta y) v = -frac1rho^0partial_x p  \n(f+beta y)u = - frac1rho^0partial_y p  \nb =  frac1rho^0partial_z p \nendaligned","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Integrating the last equation yields","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"p(xyz) - p(xy-L_z) = rho^0 int_-L_z^z b(yzeta) dzeta","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"which can then be differentiated with respect to x to give an expression for v","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\n(f+beta y)v = -frac1rho^0partial_x p(xy-Lz) \nendaligned","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"This implies that v must be independent of the vertical coordinate z. In particular we assign the value v = 0 at the bottom of the domain since we have a linear drag bottom boundary condition (relaxation to zero). Thus partial_x p(xy-Lz) = 0 Rightarrow p(xy-Lz) = rho^0 F(y) where F(y) is some arbitrary function of y.","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"We now differentiate pressure with respect to y to get an expression for the zonal velocity ","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\n(f+beta y)u = - partial_y left(int_-L_z^z b(yzeta) dzeta + F(y) right)\n \n= -  int_-L_z^z partial_y b(yzeta) dzeta - F(y) \nendaligned","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Since partial_y b(yzeta) is independent of z we can carry out the integral and get","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\n(f+beta y)u = - (z+L_z)b_s(y) + F(y) \nendaligned","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"We can determine F(y) = 0 by evaluating the above expression at z = -L_z and using that u  = 0 at the bottom of the domain. We can then determine that ","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\nu = - frac(z+L_z)f+beta yb_s(y)\nendaligned","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"The last velocity field w can be determined from the continuity equation and the condition that w=0 at the surface and the bottom to get that the initial condition for w = 0.","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"Thus in total we have the following concrete initial conditions","category":"page"},{"location":"simulation_1/","page":"Simulation 1","title":"Simulation 1","text":"beginaligned\nb^0 = Delta b left(fracyL_y +  fracexp(zh)- exp(-L_z  h)1- exp(-L_z  h) - 1right)  \nu^0 = - frac(z+L_z)f+beta yfracDelta bL_y  \nv^0 = w^0 = 0\nendaligned","category":"page"},{"location":"#Mesoscale","page":"Home","title":"Mesoscale","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Mesoscale repository. This repository includes Oceananigans scripts as well as diagnostic scripts.","category":"page"}]
}
